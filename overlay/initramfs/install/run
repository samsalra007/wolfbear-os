#!/bin/sh
set -euo pipefail

source /install/util-log

export TARGET_DISK_DIR="/mnt/target"
export CURRENT_PATH=$( pwd )
export SCRIPTS_DIR="$( dirname "$0" )/install"

echo "Bienvenido a instalación de WolfbearOS Developer"
echo "- Por favor, lee las instrucciones antes de comenzar."
echo "- También puedes regresar a cualquier paso de la instalación con tan solo ejecutar:"
echo "  ./run [script]"
echo "- Donde [script] tiene el formato xxx-nombre"
echo "- De otra forma el asistente ejecutará todos los scripts en orden."
echo " "
echo "- También puedes detener el proceso de instalación a través del comando estándar CTRL+C y reanudar en cualquier momento"
echo " "
sleep 5

export SYS_ARCH=$( ./000-arch-detection )

# Obtén la ruta real del script "install"
BASEDIR=$(cd "$(dirname "$0")" && pwd)
# Los scripts numerados están en el mismo directorio que este script
SCRIPTS_DIR="$BASEDIR"

if [ -z "${1-}" ]; then
  echo "Has solicitado ejecutar todos los scripts del directorio."
else
  SCRIPT_NAME_TO_EXECUTE=$1
  echo "Has solicitado ejecutar el script '$SCRIPT_NAME_TO_EXECUTE'."
  sh "$SCRIPT_NAME_TO_EXECUTE"
  exit 0
fi

i=0
while :; do
  prefix=$(printf "%03d" "$i")

  # Expande el patrón (efectúa globbing)
  set -- "$SCRIPTS_DIR/${prefix}-"*
  # Si no existe ningún fichero coincidente, $1 será literal y -e fallará
  if [ ! -e "$1" ]; then
    echo
    echo "Se ha terminado la ejecución de los scripts (ya no existe el script ${prefix}-*)"
    break
  fi

  # Ejecuta cada script existente y ejecutable usando sh
  for script in "$SCRIPTS_DIR/${prefix}-"*; do
    [ -f "$script" ] || continue
    if [ ! -x "$script" ]; then
      echo "Saltando script $script (no es ejecutable)"
      continue
    fi
    echo
    echo "Corriendo script $script"
    sh "$script"
  done

  i=$((i + 1))
done

echo "El script de instalación de WolfbearOS ha finalizado exitosamente"
exit 0
#!/bin/sh
set -euo pipefail

# Script init para initramfs de WolfbearOS
# Monta la partici贸n, comprueba la instalaci贸n y lanza instalador si es necesario

echo "[initramfs] Arrancando sistemas virtuales..."
mkdir -p /proc /sys /dev
mount -t devtmpfs dev /dev
mount -t proc proc /proc
mount -t sysfs sysfs /sys

export WOLFBEAR_OS_PRODUCT_NAME=$( cat /sys/class/dmi/id/product_name 2>/dev/null | tr -d '\r' )
export WOLFBEAR_OS_SYS_VENDOR=$( cat /sys/class/dmi/id/sys_vendor )
export WOLFBEAR_OS_PARTITION_TIMEOUT=10
export WOLFBEAR_OS_CONSOLE_PORTS="tty1 ttyAMA0"

case "$WOLFBEAR_OS_PRODUCT_NAME" in
    *QEMU*|*KVM*|*VirtualBox*|*VMware*|*Bochs*|*Xen*|*Hyper-V*|*Parallels*|*Apple\ Virtual*)
        export WOLFBEAR_OS_IS_VIRTUALIZED="true"
        ;;
    *)
        export WOLFBEAR_OS_IS_VIRTUALIZED="false"
        ;;
esac

echo "WolfbearOS System Properties"
echo "product name:         $WOLFBEAR_OS_PRODUCT_NAME"
echo "system vendor:        $WOLFBEAR_OS_SYS_VENDOR"
echo "is virtualized:       $WOLFBEAR_OS_IS_VIRTUALIZED"
echo "partition timeout:    $WOLFBEAR_OS_PARTITION_TIMEOUT"

echo "Listando bloques"
lsblk

source /install/globals-definitions
source /install/util-log

. /install/run || echo "[initramfs] La instalaci贸n de WolfbearOS fall贸"

# Bucle para mantener consola activa
for port in $WOLFBEAR_OS_CONSOLE_PORTS; do
  if [ -e "/dev/$port" ]; then
    echo "[initramfs] WolfbearOS corriendo en el puerto $port"
    /sbin/getty -L "$port" 115200 vt100 &
  fi
done

# Esperar indefinidamente (para evitar que PID 1 muera)
wait
#!/bin/bash

echo "[STEP BEGIN] pkg-external-dependencies-alpine-docker"
sleep 1

echo "  External path found: "${PKG_EXTERNAL_PATH}
sleep 1


docker run --rm --platform linux/arm64 -v "$PKG_EXTERNAL_PATH":/target debian:bookworm-slim sh -euxc '
  # 1. Actualiza e instala paquetes necesarios
  apt-get update
  apt-get install -y --no-install-recommends \
    pkg-config rsync \
    libsdl2-dev \
    libdrm-dev \
    libgbm-dev \
    libegl1-mesa-dev \
    libgl1-mesa-dev \
    libwayland-dev \
    libexpat1-dev \
    libffi-dev \
    libc6-dev \
    file

  # 2. Limpia y crea estructura destino
  rm -rf /target/usr/include /target/usr/lib /target/lib
  mkdir -p \
    /target/usr/include \
    /target/usr/lib \
    /target/lib \
    /target/usr/bin \
    /target/usr/share/misc

  echo "Copiando headers de desarrollo..."
  rsync -a --links /usr/include/ /target/usr/include/

  echo "Copiando librerías dinámicas..."
  rsync -a --links /usr/lib/aarch64-linux-gnu/libSDL2*.so*          /target/usr/lib/
  rsync -a --links /usr/lib/aarch64-linux-gnu/libdrm*.so*           /target/usr/lib/
  rsync -a --links /usr/lib/aarch64-linux-gnu/libgbm*.so*           /target/usr/lib/
  rsync -a --links /usr/lib/aarch64-linux-gnu/libEGL*.so*           /target/usr/lib/
  rsync -a --links /usr/lib/aarch64-linux-gnu/libGL*.so*            /target/usr/lib/
  rsync -a --links /usr/lib/aarch64-linux-gnu/libwayland-server*.so* /target/usr/lib/
  rsync -a --links /usr/lib/aarch64-linux-gnu/libexpat*.so*         /target/usr/lib/
  rsync -a --links /usr/lib/aarch64-linux-gnu/libffi*.so*           /target/usr/lib/
  rsync -a --links /usr/lib/aarch64-linux-gnu/libm.so*              /target/usr/lib/

  echo "Copiando librerías estáticas (si existen)..."
  rsync -a --links /usr/lib/aarch64-linux-gnu/libSDL2.a             /target/usr/lib/ || true
  rsync -a --links /usr/lib/aarch64-linux-gnu/libdrm.a              /target/usr/lib/ || true
  rsync -a --links /usr/lib/aarch64-linux-gnu/libgbm.a              /target/usr/lib/ || true
  rsync -a --links /usr/lib/aarch64-linux-gnu/libwayland-server.a   /target/usr/lib/ || true
  rsync -a --links /usr/lib/aarch64-linux-gnu/libexpat.a            /target/usr/lib/ || true
  rsync -a --links /usr/lib/aarch64-linux-gnu/libffi.a              /target/usr/lib/ || true
  rsync -a --links /usr/lib/aarch64-linux-gnu/libm.a                /target/usr/lib/ || true
  rsync -a --links /usr/lib/aarch64-linux-gnu/libc.a                /target/usr/lib/ || true

  echo "Copiando herramientas de desarrollo..."
  rsync -a --links /usr/bin/file                                    /target/usr/bin/
  rsync -a --links /usr/bin/ldd                                     /target/usr/bin/

  echo "Copiando base de datos de magic..."
  cp -a /usr/share/misc/magic.mgc                                   /target/usr/share/misc/

  chmod -R u+rwX /target
  echo "=== pkg-external listo para cross-compilación ==="
'


# Activar según la GPU, Por el momento no se activa, y hay que añadir mesa-vulkan en las dependencias
# ICDs (implementaciones de Vulkan para hardware específico, ej: mesa)
# cp -a /usr/lib/libvulkan_intel.so* /target/usr/lib/ 2>/dev/null || true
# cp -a /usr/lib/libvulkan_radeon.so* /target/usr/lib/ 2>/dev/null || true
# cp -a /usr/lib/libvulkan_lvp.so* /target/usr/lib/ 2>/dev/null || true
# cp -a /usr/lib/libvulkan_swrast.so* /target/usr/lib/ 2>/dev/null || true

echo "[STEP END] pkg-external-dependencies-alpine-docker"
sleep 1

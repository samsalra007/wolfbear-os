#!/bin/bash

echo "[STEP BEGIN] pkg-external-dependencies-alpine-docker"
sleep 1

echo "  Verifying required paths exist"
sleep 1
mkdir -p $PKG_EXTERNAL_PATH/usr/include $PKG_EXTERNAL_PATH/usr/lib


echo "  Running Docker Image"
sleep 1

echo "  PKG_EXTERNAL_PATH="$PKG_EXTERNAL_PATH
sleep 1

docker run --rm -v "${PKG_EXTERNAL_PATH}":/target alpine:3.18 sh -euxc '
  apk update
  apk add --no-cache sdl2-dev musl-dev libdrm mesa-dri-gallium mesa-gl mesa-egl eudev-dev

  # Copiar encabezados estándar
  rm -rf /target/usr/include
  mkdir /target/usr/include

  cp -a /usr/include       /target/usr/

  # Copiar Librerias No Estandar
  cp -a /usr/include/SDL2	/target/usr/include/
  cp -a /usr/lib/libSDL2*	/target/usr/lib/
  cp -a /usr/lib/libdrm*	/target/usr/lib/
  cp -a /usr/lib/libEGL*	/target/usr/lib/
  cp -a /usr/lib/libGL*	/target/usr/lib/
  cp -a /usr/lib/libudev*	/target/usr/lib/

  # Copiar libc y loader dinámico (que traen libm, stdio, etc.)
  mkdir -p /target/lib
  cp -a /lib/libc.musl-*.so.1	/target/lib/libc.so.1
  cp -a /lib/ld-musl-*.so.1     /target/lib/

  # (Opcional) si necesitas la libc estática (.a)
  cp -a /usr/lib/libc.a       /target/usr/lib/

  echo "--- Dentro del contenedor, /target/lib contiene:" && ls /target/lib
  echo "--- Dentro del contenedor, /target/usr/lib contiene:" && ls /target/usr/lib
'


echo "  Checking dependencies installed"
sleep 1
# ls $PKG_EXTERNAL_PATH/usr/include/SDL2
ls $PKG_EXTERNAL_PATH/usr/lib

echo "[STEP END] pkg-external-dependencies-alpine-docker"
sleep 1

#!/bin/sh
set -euo pipefail

echo "Welcome to wolfbearOS development build script"
echo "Command if you forget it: ./build --cleanup --linux-kernel --linux-kernel-clean --linux-kernel-modules --linux-menuconfig --busybox --busybox-menuconfig --initramfs-build --initramfs-compress --disk-image --efi-firmware"
sleep 0.5

PROJECT_PATH=$(pwd)

BUILD_SCRIPTS_PATH=$PROJECT_PATH/scripts
CONFIG_FILES_PATH=$PROJECT_PATH/config
DEPENDENCIES_PATH=$PROJECT_PATH/dependencies
PATCHES_PATH=$PROJECT_PATH/patches
TARGET_PATH=$PROJECT_PATH/target
INITRAMFS_PATH=$PROJECT_PATH/initramfs
MODULES_CACHE_PATH=$PROJECT_PATH/kernel-modules-cache

LINUX_KERNEL_VERSION=6.12
LINUX_KERNEL_PATH=$DEPENDENCIES_PATH/linux

BUSY_BOX_VERSION=1.37.0
BUSY_BOX_PATH=$DEPENDENCIES_PATH/busybox

OVERLAY_PATH=$PROJECT_PATH/overlay
ROOTFS_PATH=$PROJECT_PATH/rootfs

BUILD_ARCH=$(uname -m)
if [ "$BUILD_ARCH" = 'aarch64' ]; then
	BUILD_ARCH='arm64'
else 
	BUILD_ARCH='amd64'
fi

BUILD_CROSS_COMPILE=aarch64-linux-gnu-

OVERLAY_APPS_PATH=$OVERLAY_PATH/apps

# Variables por defecto
VAR_CLEANUP='n'
VAR_COMPILE_LINUX_KERNEL='n'
VAR_COMPILE_LINUX_KERNEL_MENUCONFIG='n'
VAR_COMPILE_BUSYBOX='n'
VAR_BUSYBOX_MENUCONFIG='n'
VAR_INITRAMFS_BUILD='n'
VAR_INITRAMFS_COMPRESS='n'
VAR_KERNEL_MODULES_COMPILE='n'
VAR_KERNEL_CLEAN='n'
VAR_DISK_IMAGE_CREATION='n'
VAR_EFI_FIRMWARE='n'

# Procesar argumentos
while [[ "$#" -gt 0 ]]; do
    case "$1" in
        -c|--cleanup)
            VAR_CLEANUP='y'
	    shift
            ;;
        -lk|--linux-kernel)
            VAR_COMPILE_LINUX_KERNEL='y'
            shift
            ;;
        -lkc|--linux-kernel-clean)
            VAR_KERNEL_CLEAN='y'
            shift
            ;;
        -lkm|--linux-kernel-modules)
            VAR_KERNEL_MODULES_COMPILE='y'
            shift
            ;;
        -lc|--linux-menuconfig)
            VAR_COMPILE_LINUX_KERNEL_MENUCONFIG='y'
            shift
            ;;
        -b|--busybox)
            VAR_COMPILE_BUSYBOX='y'
            shift
            ;;
        -bc|--busybox-menuconfig)
            VAR_BUSYBOX_MENUCONFIG='y'
            shift
            ;;
        -ib|--initramfs-build)
            VAR_INITRAMFS_BUILD='y'
            shift
	    ;;
        -ic|--initramfs-compress)
            VAR_INITRAMFS_COMPRESS='y'
            shift
            ;;
        -dimg|--disk-image)
            VAR_DISK_IMAGE_CREATION='y'
            shift
            ;;
        -efi|--efi-firmware)
            VAR_EFI_FIRMWARE='y'
            shift
            ;;
    esac
done

mkdir -p $DEPENDENCIES_PATH

if [ "$VAR_CLEANUP" = 'y' ]; then
	echo "[BUILD] Starting cleanup ./rootfs and ./target path"
	sleep 0.5

	cd $BUILD_SCRIPTS_PATH
	source ./000-cleanup	

	echo "[BUILD] Cleanup finished ./rootfs"
	sleep 0.5
fi

if [ "$VAR_COMPILE_LINUX_KERNEL" = 'y' ]; then
	echo "[BUILD] Compiling and patching linux kernel"
	sleep 0.5

	cd $BUILD_SCRIPTS_PATH
	if [ "$VAR_COMPILE_LINUX_KERNEL_MENUCONFIG" = 'y' ]; then
		source ./001-linux-kernel-setup menuconfig
	else
		source ./001-linux-kernel-setup oldconfig
	fi
	echo "[BUILD] Linux kernel was patched successfully"
	sleep 0.5
fi


if [ "$VAR_COMPILE_BUSYBOX" = 'y' ]; then
	echo "[BUILD] Linux busybox setup"
	sleep 0.5

	cd $BUILD_SCRIPTS_PATH
        if [ "$VAR_BUSYBOX_MENUCONFIG" = 'y' ]; then
		source ./002-linux-busybox-setup menuconfig
        else
		source ./002-linux-busybox-setup oldconfig
        fi	

	echo "[BUILD] Busybox was compiled successfully"
	sleep 0.5
fi

if [ "$VAR_INITRAMFS_BUILD" = 'y' ]; then
        echo "[BUILD] ./initramfs build started"
        sleep 0.5

        cd $BUILD_SCRIPTS_PATH
        source ./003-initramfs-dependencies-install

        echo "[BUILD] ./initramfs build finished"
        sleep 0.5
fi

if [ "$VAR_INITRAMFS_COMPRESS" = 'y' ]; then
	echo "[BUILD] Strating ./initramfs compression"
	sleep 0.5

	cd $BUILD_SCRIPTS_PATH
	source ./004-package-initramfs

	echo "[BUILD] Finished ./initramfs compression"
	sleep 0.5
fi

if [ "$VAR_DISK_IMAGE_CREATION" = 'y' ]; then
	echo "[BUILD] Invoking disk image creation"
	sleep 0.5

	cd $BUILD_SCRIPTS_PATH
	source ./005-disk-image

	echo "[BUILD] Finished disk image creation"
	sleep 0.5
fi

if [ "$VAR_EFI_FIRMWARE" = 'y' ]; then
	echo "[BUILD] Invoking disk image creation"
	sleep 0.5

	cd $BUILD_SCRIPTS_PATH
	source ./006-efi-firmware-extraction

	echo "[BUILD] Finished disk image creation"
	sleep 0.5
fi

echo "[FINISH] WolfbearOS build script process finished"
sleep 0.2


mkdir -p ~/.abuild
cd ~/.abuild
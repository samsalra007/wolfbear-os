#!/bin/sh
set -euo pipefail
source $SCRIPTS_DIR/util-log

SCRIPT_NAME=$0
log_message $SCRIPT_NAME "Script de compilación de librería KMSDRM para Qt"

if [ ! -d "$DEPENDENCY_QT_PLUGIN_KMS" ] || [ -z "$(ls -A "$DEPENDENCY_QT_PLUGIN_KMS")" ]; then
	log_message $SCRIPT_NAME "La dependencia del plugin Qt KMS libqkmsdrm.so no se encontró en el sistema"
	log_message $SCRIPT_NAME "Será descargada desde su repositorio oficial"
	new_line

	mkdir -p "$DEPENDENCY_QT_PLUGIN_KMS"
	git clone --branch v$QT_KMS_VERSION --depth=1 https://code.qt.io/qt/qtbase.git "$DEPENDENCY_QT_PLUGIN_KMS"

	debug_message $SCRIPT_NAME "Qt Base descargado exitosamente"
else 
	debug_message $SCRIPT_NAME "Qt Base ya está presente en la carpeta de dependencias"
fi

debug_message $SCRIPT_NAME "Accediendo al directorio $DEPENDENCY_QT_PLUGIN_KMS"
cd "$DEPENDENCY_QT_PLUGIN_KMS"

debug_message $SCRIPT_NAME "Generando carpeta build"
rm -rf build
mkdir build && cd build

debug_message $SCRIPT_NAME "Configurando con CMake"
cmake .. \
  -GNinja \
  -DCMAKE_BUILD_TYPE=Release \
  -DQT_BUILD_EXAMPLES=OFF \
  -DQT_BUILD_TESTS=OFF \
  -DQT_FEATURE_kmsdrm=ON

debug_message $SCRIPT_NAME "Compilando libqkmsdrm.so con ninja"
ninja src/plugins/platforms/kmsdrm

debug_message $SCRIPT_NAME "Copiando librería compilada"
mkdir -p "$OVERLAY_SYSAPPS_DIR/usr/lib/qt6/plugins/platforms/"
cp ./plugins/platforms/libqkmsdrm.so "$OVERLAY_SYSAPPS_DIR/usr/lib/qt6/plugins/platforms/"

log_message $SCRIPT_NAME "Plugin libqkmsdrm.so copiado exitosamente"

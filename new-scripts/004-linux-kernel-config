#!/bin/sh
set -euo pipefail
source $SCRIPTS_DIR/util-log

SCRIPT_NAME=$0

log_message $SCRIPT_NAME "Iniciando configuraci칩n del kernel de linux '$DEPENDENCY_LINUX_DIR'"
log_message $SCRIPT_NAME "Se compilar치 el kernel para la arquitectura '$SYS_ARCH'"

debug_message $SCRIPT_NAME "Eliminando archivo de configuraci칩n si existe en '$DEPENDENCY_LINUX_DIR/.config'"
rm -f "$DEPENDENCY_LINUX_DIR"/.config

CONFIG_IN_PROJECT="$CONFIG_FILES_DIR/linux-config-$SYS_ARCH"
CONFIG_IN_LINUX_DIR="$DEPENDENCY_LINUX_DIR/.config"

debug_message $SCRIPT_NAME "Copiando archivo de configuraci칩n"
debug_message $SCRIPT_NAME "Desde '$CONFIG_IN_PROJECT' hasta '$CONFIG_IN_LINUX_DIR'" 1

cp $CONFIG_FILES_DIR/linux-config-$SYS_ARCH $DEPENDENCY_LINUX_DIR/.config

debug_message $SCRIPT_NAME "Revisando que el archivo haya sido copiado exitosamente '$DEPENDENCY_LINUX_DIR/.config'"
exit

echo "- Checking if Linux kernel needs to be patched with WolbearOS changes"
sleep 0.5

if patch --dry-run --forward -p1 < $PATCHES_PATH/001-linux-blk-iocost-c-unsigned-int-format > /dev/null; then
	echo "- Patch 001-linux-blk-iocost-c-unsigned-int-format"
	sleep 0.5
	patch -p1 < $PATCHES_PATH/001-linux-blk-iocost-c-unsigned-int-format
fi

if patch --dry-run --forward -p1 < $PATCHES_PATH/000-linux-uts-name.patch > /dev/null; then
 	echo "- Applying WolfbearOS patches"
 	sleep 0.5

	patch -p1 < $PATCHES_PATH/000-linux-uts-name.patch

	echo "- Patches applied successfully"
	sleep 0.5
else
	echo "- Linux kernel is already patched and no patch-action is needed"
	sleep 0.5
fi

log_message $SCRIPT_NAME "Descarga de Linux kernel finalizada en: '$DEPENDENCY_LINUX_DIR'"